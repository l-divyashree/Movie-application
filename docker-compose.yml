version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: moviebooking-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: moviebooking
      MYSQL_USER: movieuser
      MYSQL_PASSWORD: moviepassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - moviebooking-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: moviebooking-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: moviebooking
      DB_USER: movieuser
      DB_PASSWORD: moviepassword
      JWT_SECRET: mySecretKey123456789012345678901234567890
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - moviebooking-network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: moviebooking-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - moviebooking-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  moviebooking-network:
    driver: bridge