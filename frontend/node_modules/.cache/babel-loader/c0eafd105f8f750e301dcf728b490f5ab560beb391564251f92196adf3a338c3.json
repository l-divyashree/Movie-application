{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\P12C4F3\\\\OneDrive - Dayforce HCM Inc\\\\Desktop\\\\Movie-1\\\\frontend\\\\src\\\\components\\\\common\\\\AnimatedCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedCounter = ({\n  endValue,\n  duration = 1500,\n  prefix = '',\n  suffix = '',\n  formatter = null\n}) => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(0);\n  const elRef = useRef(null);\n  const rafRef = useRef(null);\n  const idRef = useRef(`counter-${Math.random().toString(36).slice(2, 9)}`);\n\n  // Normalize endValue to a finite number\n  const parseEndValue = v => {\n    if (typeof v === 'number' && Number.isFinite(v)) return v;\n    if (typeof v === 'string') {\n      // strip commas or non-numeric characters except dot and minus\n      const cleaned = v.replace(/,/g, '').trim();\n      const n = Number(cleaned);\n      return Number.isFinite(n) ? n : 0;\n    }\n    const n = Number(v);\n    return Number.isFinite(n) ? n : 0;\n  };\n  useEffect(() => {\n    const node = elRef.current;\n    if (!node) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        // kick off animation by toggling a data attribute so the other effect runs\n        node.dataset.visible = '1';\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(node);\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const node = elRef.current;\n    if (!node) return;\n    if (node.dataset.visible !== '1') return;\n    let startTime = null;\n    const startValue = 0;\n    const endVal = parseEndValue(endValue);\n    const animate = time => {\n      if (!startTime) startTime = time;\n      const elapsed = time - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easeOut = 1 - Math.pow(1 - progress, 3);\n      const value = Math.floor(startValue + (endVal - startValue) * easeOut);\n      setCurrentValue(value);\n      if (progress < 1) {\n        rafRef.current = requestAnimationFrame(animate);\n      }\n    };\n\n    // start animation\n    rafRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (rafRef.current) {\n        cancelAnimationFrame(rafRef.current);\n      }\n    };\n  }, [endValue, duration]);\n  const formatValue = value => {\n    const normalized = Number.isFinite(value) ? value : 0;\n    if (formatter) return formatter(normalized);\n    try {\n      return normalized.toLocaleString();\n    } catch (e) {\n      return String(normalized);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: idRef.current,\n    ref: elRef,\n    className: \"inline-block\",\n    style: {\n      fontVariantNumeric: 'tabular-nums',\n      transition: 'color var(--transition-fast)'\n    },\n    children: [prefix, formatValue(currentValue), suffix]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedCounter, \"JWMRiO5BrMx003osQb/ZeZXnPyg=\");\n_c = AnimatedCounter;\nexport default AnimatedCounter;\nvar _c;\n$RefreshReg$(_c, \"AnimatedCounter\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","AnimatedCounter","endValue","duration","prefix","suffix","formatter","_s","currentValue","setCurrentValue","elRef","rafRef","idRef","Math","random","toString","slice","parseEndValue","v","Number","isFinite","cleaned","replace","trim","n","node","current","observer","IntersectionObserver","entry","isIntersecting","dataset","visible","threshold","observe","disconnect","startTime","startValue","endVal","animate","time","elapsed","progress","min","easeOut","pow","value","floor","requestAnimationFrame","cancelAnimationFrame","formatValue","normalized","toLocaleString","e","String","id","ref","className","style","fontVariantNumeric","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/P12C4F3/OneDrive - Dayforce HCM Inc/Desktop/Movie-1/frontend/src/components/common/AnimatedCounter.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst AnimatedCounter = ({\r\n  endValue,\r\n  duration = 1500,\r\n  prefix = '',\r\n  suffix = '',\r\n  formatter = null\r\n}) => {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const elRef = useRef(null);\r\n  const rafRef = useRef(null);\r\n  const idRef = useRef(`counter-${Math.random().toString(36).slice(2, 9)}`);\r\n\r\n  // Normalize endValue to a finite number\r\n  const parseEndValue = (v) => {\r\n    if (typeof v === 'number' && Number.isFinite(v)) return v;\r\n    if (typeof v === 'string') {\r\n      // strip commas or non-numeric characters except dot and minus\r\n      const cleaned = v.replace(/,/g, '').trim();\r\n      const n = Number(cleaned);\r\n      return Number.isFinite(n) ? n : 0;\r\n    }\r\n    const n = Number(v);\r\n    return Number.isFinite(n) ? n : 0;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const node = elRef.current;\r\n    if (!node) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          // kick off animation by toggling a data attribute so the other effect runs\r\n          node.dataset.visible = '1';\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    observer.observe(node);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const node = elRef.current;\r\n    if (!node) return;\r\n    if (node.dataset.visible !== '1') return;\r\n\r\n    let startTime = null;\r\n    const startValue = 0;\r\n    const endVal = parseEndValue(endValue);\r\n\r\n    const animate = (time) => {\r\n      if (!startTime) startTime = time;\r\n      const elapsed = time - startTime;\r\n      const progress = Math.min(elapsed / duration, 1);\r\n      const easeOut = 1 - Math.pow(1 - progress, 3);\r\n      const value = Math.floor(startValue + (endVal - startValue) * easeOut);\r\n      setCurrentValue(value);\r\n\r\n      if (progress < 1) {\r\n        rafRef.current = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    // start animation\r\n    rafRef.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (rafRef.current) {\r\n        cancelAnimationFrame(rafRef.current);\r\n      }\r\n    };\r\n  }, [endValue, duration]);\r\n\r\n  const formatValue = (value) => {\r\n    const normalized = Number.isFinite(value) ? value : 0;\r\n    if (formatter) return formatter(normalized);\r\n    try {\r\n      return normalized.toLocaleString();\r\n    } catch (e) {\r\n      return String(normalized);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span\r\n      id={idRef.current}\r\n      ref={elRef}\r\n      className=\"inline-block\"\r\n      style={{\r\n        fontVariantNumeric: 'tabular-nums',\r\n        transition: 'color var(--transition-fast)'\r\n      }}\r\n    >\r\n      {prefix}{formatValue(currentValue)}{suffix}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AnimatedCounter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}