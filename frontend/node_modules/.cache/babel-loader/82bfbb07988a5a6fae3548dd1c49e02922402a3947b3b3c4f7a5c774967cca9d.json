{"ast":null,"code":"import _objectSpread from\"C:/Users/P12C4F3/OneDrive - Dayforce HCM Inc/Desktop/Movie-1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// API base URL\nconst API_BASE_URL='http://localhost:8080/api';useEffect(()=>{// Check if user is already logged in on app start\nconst storedToken=localStorage.getItem('token');const storedUser=localStorage.getItem('user');if(storedToken&&storedUser){try{setToken(storedToken);setUser(JSON.parse(storedUser));}catch(error){console.error('Error parsing stored user data:',error);localStorage.removeItem('token');localStorage.removeItem('user');}}setLoading(false);},[]);const login=async(email,password)=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/auth/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Login failed');}const data=await response.json();// Create user object from JWT response\nconst user={id:data.id,username:data.username,email:data.email,roles:data.roles};// Store token and user data\nlocalStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(user));setToken(data.token);setUser(user);return{success:true,user:user};}catch(error){console.error('Login error:',error);return{success:false,error:error.message};}};const register=async userData=>{try{const url=\"\".concat(API_BASE_URL,\"/auth/signup\");console.log('Attempting registration to:',url);console.log('Registration data:',userData);const response=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});console.log('Response status:',response.status);console.log('Response headers:',response.headers);if(!response.ok){const errorText=await response.text();console.error('Registration failed with status:',response.status);console.error('Error response:',errorText);let errorData;try{errorData=JSON.parse(errorText);}catch(e){errorData={message:errorText||'Registration failed'};}throw new Error(errorData.message||'Registration failed');}const data=await response.json();console.log('Registration successful:',data);return{success:true,message:data.message};}catch(error){console.error('Registration error:',error);return{success:false,error:error.message};}};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setToken(null);setUser(null);};const isAuthenticated=()=>{return!!token&&!!user;};const isAdmin=()=>{var _user$roles;return(user===null||user===void 0?void 0:(_user$roles=user.roles)===null||_user$roles===void 0?void 0:_user$roles.includes('ROLE_ADMIN'))||false;};const getAuthHeader=()=>{return token?{Authorization:\"Bearer \".concat(token)}:{};};// API helper function with authentication\nconst apiCall=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=endpoint.startsWith('http')?endpoint:\"\".concat(API_BASE_URL).concat(endpoint);const config=_objectSpread({headers:_objectSpread(_objectSpread({'Content-Type':'application/json'},getAuthHeader()),options.headers)},options);try{const response=await fetch(url,config);// Handle unauthorized responses\nif(response.status===401){logout();throw new Error('Authentication required');}if(!response.ok){const errorData=await response.json().catch(()=>({}));throw new Error(errorData.message||\"HTTP \".concat(response.status));}return await response.json();}catch(error){console.error('API call error:',error);throw error;}};const value={user,token,loading,login,register,logout,isAuthenticated,isAdmin,apiCall,getAuthHeader};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","API_BASE_URL","storedToken","storedUser","JSON","parse","error","console","removeItem","login","email","password","response","fetch","concat","method","headers","body","stringify","ok","errorData","json","message","data","id","username","roles","setItem","success","register","userData","url","log","status","errorText","text","e","logout","isAuthenticated","isAdmin","_user$roles","includes","getAuthHeader","Authorization","apiCall","endpoint","options","arguments","length","undefined","startsWith","config","_objectSpread","catch","value","Provider"],"sources":["C:/Users/P12C4F3/OneDrive - Dayforce HCM Inc/Desktop/Movie-1/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // API base URL\r\n  const API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in on app start\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    \r\n    if (storedToken && storedUser) {\r\n      try {\r\n        setToken(storedToken);\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/auth/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Create user object from JWT response\r\n      const user = {\r\n        id: data.id,\r\n        username: data.username,\r\n        email: data.email,\r\n        roles: data.roles\r\n      };\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      setToken(data.token);\r\n      setUser(user);\r\n      \r\n      return { success: true, user: user };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const url = `${API_BASE_URL}/auth/signup`;\r\n      console.log('Attempting registration to:', url);\r\n      console.log('Registration data:', userData);\r\n      \r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      console.log('Response status:', response.status);\r\n      console.log('Response headers:', response.headers);\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error('Registration failed with status:', response.status);\r\n        console.error('Error response:', errorText);\r\n        \r\n        let errorData;\r\n        try {\r\n          errorData = JSON.parse(errorText);\r\n        } catch (e) {\r\n          errorData = { message: errorText || 'Registration failed' };\r\n        }\r\n        throw new Error(errorData.message || 'Registration failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Registration successful:', data);\r\n      return { success: true, message: data.message };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    return !!token && !!user;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user?.roles?.includes('ROLE_ADMIN') || false;\r\n  };\r\n\r\n  const getAuthHeader = () => {\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  // API helper function with authentication\r\n  const apiCall = async (endpoint, options = {}) => {\r\n    const url = endpoint.startsWith('http') ? endpoint : `${API_BASE_URL}${endpoint}`;\r\n    \r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...getAuthHeader(),\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      // Handle unauthorized responses\r\n      if (response.status === 401) {\r\n        logout();\r\n        throw new Error('Authentication required');\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || `HTTP ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API call error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated,\r\n    isAdmin,\r\n    apiCall,\r\n    getAuthHeader,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}