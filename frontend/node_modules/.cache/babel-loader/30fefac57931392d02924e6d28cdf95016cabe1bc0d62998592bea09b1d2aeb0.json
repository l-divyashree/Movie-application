{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";const AnimatedCounter=_ref=>{let{endValue,duration=1500,prefix='',suffix='',formatter=null}=_ref;const[currentValue,setCurrentValue]=useState(0);const[isVisible,setIsVisible]=useState(false);useEffect(()=>{// Start animation when component becomes visible\nconst observer=new IntersectionObserver(_ref2=>{let[entry]=_ref2;if(entry.isIntersecting&&!isVisible){setIsVisible(true);}},{threshold:0.1});const element=document.getElementById(\"counter-\".concat(Math.random()));if(element){observer.observe(element);}return()=>{if(element){observer.unobserve(element);}};},[isVisible]);useEffect(()=>{if(!isVisible)return;let startTime;const startValue=0;// Better validation for endValue\nlet endVal=0;if(typeof endValue==='number'&&!isNaN(endValue)){endVal=endValue;}else if(typeof endValue==='string'){const parsed=parseFloat(endValue);endVal=!isNaN(parsed)?parsed:0;}console.log('AnimatedCounter - endValue:',endValue,'parsed to:',endVal);const animate=currentTime=>{if(!startTime)startTime=currentTime;const elapsed=currentTime-startTime;const progress=Math.min(elapsed/duration,1);// Easing function for smooth animation\nconst easeOut=1-Math.pow(1-progress,3);const value=Math.floor(startValue+(endVal-startValue)*easeOut);setCurrentValue(value);if(progress<1){requestAnimationFrame(animate);}};requestAnimationFrame(animate);},[isVisible,endValue,duration]);const formatValue=value=>{if(formatter){return formatter(value);}return value.toLocaleString();};return/*#__PURE__*/_jsxs(\"span\",{id:\"counter-\".concat(Math.random()),className:\"inline-block\",style:{fontVariantNumeric:'tabular-nums',transition:'color var(--transition-fast)'},children:[prefix,formatValue(currentValue),suffix]});};export default AnimatedCounter;","map":{"version":3,"names":["React","useState","useEffect","jsxs","_jsxs","AnimatedCounter","_ref","endValue","duration","prefix","suffix","formatter","currentValue","setCurrentValue","isVisible","setIsVisible","observer","IntersectionObserver","_ref2","entry","isIntersecting","threshold","element","document","getElementById","concat","Math","random","observe","unobserve","startTime","startValue","endVal","isNaN","parsed","parseFloat","console","log","animate","currentTime","elapsed","progress","min","easeOut","pow","value","floor","requestAnimationFrame","formatValue","toLocaleString","id","className","style","fontVariantNumeric","transition","children"],"sources":["C:/Users/P12C4F3/OneDrive - Dayforce HCM Inc/Desktop/Movie-1/frontend/src/components/common/AnimatedCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AnimatedCounter = ({ \r\n  endValue, \r\n  duration = 1500, \r\n  prefix = '', \r\n  suffix = '', \r\n  formatter = null \r\n}) => {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Start animation when component becomes visible\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting && !isVisible) {\r\n          setIsVisible(true);\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    const element = document.getElementById(`counter-${Math.random()}`);\r\n    if (element) {\r\n      observer.observe(element);\r\n    }\r\n\r\n    return () => {\r\n      if (element) {\r\n        observer.unobserve(element);\r\n      }\r\n    };\r\n  }, [isVisible]);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) return;\r\n\r\n    let startTime;\r\n    const startValue = 0;\r\n    \r\n    // Better validation for endValue\r\n    let endVal = 0;\r\n    if (typeof endValue === 'number' && !isNaN(endValue)) {\r\n      endVal = endValue;\r\n    } else if (typeof endValue === 'string') {\r\n      const parsed = parseFloat(endValue);\r\n      endVal = !isNaN(parsed) ? parsed : 0;\r\n    }\r\n    \r\n    console.log('AnimatedCounter - endValue:', endValue, 'parsed to:', endVal);\r\n\r\n    const animate = (currentTime) => {\r\n      if (!startTime) startTime = currentTime;\r\n      \r\n      const elapsed = currentTime - startTime;\r\n      const progress = Math.min(elapsed / duration, 1);\r\n      \r\n      // Easing function for smooth animation\r\n      const easeOut = 1 - Math.pow(1 - progress, 3);\r\n      const value = Math.floor(startValue + (endVal - startValue) * easeOut);\r\n      \r\n      setCurrentValue(value);\r\n      \r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(animate);\r\n  }, [isVisible, endValue, duration]);\r\n\r\n  const formatValue = (value) => {\r\n    if (formatter) {\r\n      return formatter(value);\r\n    }\r\n    return value.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <span \r\n      id={`counter-${Math.random()}`}\r\n      className=\"inline-block\"\r\n      style={{ \r\n        fontVariantNumeric: 'tabular-nums',\r\n        transition: 'color var(--transition-fast)' \r\n      }}\r\n    >\r\n      {prefix}{formatValue(currentValue)}{suffix}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AnimatedCounter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}