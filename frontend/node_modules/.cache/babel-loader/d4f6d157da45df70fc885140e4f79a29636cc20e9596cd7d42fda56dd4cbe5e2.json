{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\P12C4F3\\\\OneDrive - Dayforce HCM Inc\\\\Desktop\\\\Movie-1\\\\frontend\\\\src\\\\components\\\\common\\\\AnimatedCounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedCounter = ({\n  endValue,\n  duration = 1500,\n  prefix = '',\n  suffix = '',\n  formatter = null\n}) => {\n  _s();\n  const [currentValue, setCurrentValue] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    // Start animation when component becomes visible\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting && !isVisible) {\n        setIsVisible(true);\n      }\n    }, {\n      threshold: 0.1\n    });\n    const element = document.getElementById(`counter-${Math.random()}`);\n    if (element) {\n      observer.observe(element);\n    }\n    return () => {\n      if (element) {\n        observer.unobserve(element);\n      }\n    };\n  }, [isVisible]);\n  useEffect(() => {\n    if (!isVisible) return;\n    let startTime;\n    const startValue = 0;\n\n    // Better validation for endValue\n    let endVal = 0;\n    if (typeof endValue === 'number' && !isNaN(endValue)) {\n      endVal = endValue;\n    } else if (typeof endValue === 'string') {\n      const parsed = parseFloat(endValue);\n      endVal = !isNaN(parsed) ? parsed : 0;\n    }\n    console.log('AnimatedCounter - endValue:', endValue, 'parsed to:', endVal);\n    const animate = currentTime => {\n      if (!startTime) startTime = currentTime;\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n\n      // Easing function for smooth animation\n      const easeOut = 1 - Math.pow(1 - progress, 3);\n      const value = Math.floor(startValue + (endVal - startValue) * easeOut);\n      setCurrentValue(value);\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      }\n    };\n    requestAnimationFrame(animate);\n  }, [isVisible, endValue, duration]);\n  const formatValue = value => {\n    if (formatter) {\n      return formatter(value);\n    }\n    return value.toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: `counter-${Math.random()}`,\n    className: \"inline-block\",\n    style: {\n      fontVariantNumeric: 'tabular-nums',\n      transition: 'color var(--transition-fast)'\n    },\n    children: [prefix, formatValue(currentValue), suffix]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedCounter, \"yJv5PCuRMPtBeFEXEQTCb+HjzWs=\");\n_c = AnimatedCounter;\nexport default AnimatedCounter;\nvar _c;\n$RefreshReg$(_c, \"AnimatedCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnimatedCounter","endValue","duration","prefix","suffix","formatter","_s","currentValue","setCurrentValue","isVisible","setIsVisible","observer","IntersectionObserver","entry","isIntersecting","threshold","element","document","getElementById","Math","random","observe","unobserve","startTime","startValue","endVal","isNaN","parsed","parseFloat","console","log","animate","currentTime","elapsed","progress","min","easeOut","pow","value","floor","requestAnimationFrame","formatValue","toLocaleString","id","className","style","fontVariantNumeric","transition","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/P12C4F3/OneDrive - Dayforce HCM Inc/Desktop/Movie-1/frontend/src/components/common/AnimatedCounter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AnimatedCounter = ({ \r\n  endValue, \r\n  duration = 1500, \r\n  prefix = '', \r\n  suffix = '', \r\n  formatter = null \r\n}) => {\r\n  const [currentValue, setCurrentValue] = useState(0);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Start animation when component becomes visible\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting && !isVisible) {\r\n          setIsVisible(true);\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    const element = document.getElementById(`counter-${Math.random()}`);\r\n    if (element) {\r\n      observer.observe(element);\r\n    }\r\n\r\n    return () => {\r\n      if (element) {\r\n        observer.unobserve(element);\r\n      }\r\n    };\r\n  }, [isVisible]);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) return;\r\n\r\n    let startTime;\r\n    const startValue = 0;\r\n    \r\n    // Better validation for endValue\r\n    let endVal = 0;\r\n    if (typeof endValue === 'number' && !isNaN(endValue)) {\r\n      endVal = endValue;\r\n    } else if (typeof endValue === 'string') {\r\n      const parsed = parseFloat(endValue);\r\n      endVal = !isNaN(parsed) ? parsed : 0;\r\n    }\r\n    \r\n    console.log('AnimatedCounter - endValue:', endValue, 'parsed to:', endVal);\r\n\r\n    const animate = (currentTime) => {\r\n      if (!startTime) startTime = currentTime;\r\n      \r\n      const elapsed = currentTime - startTime;\r\n      const progress = Math.min(elapsed / duration, 1);\r\n      \r\n      // Easing function for smooth animation\r\n      const easeOut = 1 - Math.pow(1 - progress, 3);\r\n      const value = Math.floor(startValue + (endVal - startValue) * easeOut);\r\n      \r\n      setCurrentValue(value);\r\n      \r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(animate);\r\n  }, [isVisible, endValue, duration]);\r\n\r\n  const formatValue = (value) => {\r\n    if (formatter) {\r\n      return formatter(value);\r\n    }\r\n    return value.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <span \r\n      id={`counter-${Math.random()}`}\r\n      className=\"inline-block\"\r\n      style={{ \r\n        fontVariantNumeric: 'tabular-nums',\r\n        transition: 'color var(--transition-fast)' \r\n      }}\r\n    >\r\n      {prefix}{formatValue(currentValue)}{suffix}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AnimatedCounter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}